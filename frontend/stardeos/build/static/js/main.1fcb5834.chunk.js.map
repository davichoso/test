{"version":3,"sources":["Users/form.tsx","Users/components/usersTable.tsx","Users/list.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Layout","Content","addDate","dt","amount","dateType","setDate","getDate","setMonth","getMonth","setFullYear","getFullYear","withRouter","history","useState","useForm","register","handleSubmit","control","watch","errors","formState","setValue","setError","clearErrors","reset","useMutation","gql","createUser","onSubmit","data","a","key","message","loading","content","variables","then","success","duration","push","catch","e","error","Modal","title","icon","ExclamationCircleOutlined","okText","console","log","errormsg","msg","type","password","className","style","width","display","textAlign","marginBottom","href","margin","alt","src","decoding","data-nimg","sizes","padding","span","placeholder","id","required","minLength","value","maxLength","username","pattern","email","name","rules","render","field","onChange","onBlur","ref","dateFormat","placeholderText","showMonthDropdown","showYearDropdown","peekNextMonth","dropdownMode","minDate","Date","maxDate","selected","x","locale","es","birthDate","validate","password2","htmlType","columns","dataIndex","UsersTable","length","rowKey","dataSource","getUsersQuery","useQuery","refetch","getUsers","maxWidth","to","float","PlusOutlined","Menu","SubMenu","Header","Footer","Sider","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","cache","InMemoryCache","resultCaching","ReactDOM","StrictMode","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.1fcb5834.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\nimport { Row, Col } from 'antd';\r\n//import { DatePicker, Space } from 'antd';\r\nimport es from 'date-fns/locale/es';\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from 'moment';\r\nimport { Form, Input, Button, Checkbox, Layout, Menu, Breadcrumb, Alert, message, Modal } from 'antd';\r\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useMutation, gql, useQuery } from '@apollo/client';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { withRouter } from 'react-router'\r\n\r\nconst { Content } = Layout;\r\n\r\n\r\nfunction addDate(dt: any, amount: number, dateType: string) {\r\n    switch (dateType) {\r\n        case 'days':\r\n            return dt.setDate(dt.getDate() + amount) && dt;\r\n        case 'weeks':\r\n            return dt.setDate(dt.getDate() + (7 * amount)) && dt;\r\n        case 'months':\r\n            return dt.setMonth(dt.getMonth() + amount) && dt;\r\n        case 'years':\r\n            return dt.setFullYear(dt.getFullYear() + amount) && dt;\r\n    }\r\n\r\n}\r\n\r\nconst UserForm = ({ history }: { history: any }) => {\r\n    const [startDate, setStartDate] = useState(null);\r\n    const { register, handleSubmit, control, watch, formState: { errors }, formState, setValue, setError, clearErrors, reset } = useForm();\r\n\r\n    // (email:\"davichoso@gmail.com\",password:\"asdfasdf\",    username:\"davichososss\",title:\"test\", birthDate:\"2007-12-03T10:15:30Z\")\r\n    const [createUser] = useMutation(gql`mutation \r\n    createUser($email: String!,$password: String!,$username: String!,$title: String!,$birthDate: DateTime! ){ \r\n        createUser(email:$email,password:$password,username:$username,title:$title, birthDate:$birthDate) { title }}`);\r\n    const onSubmit = async (data: any) => {\r\n\r\n        const key = 'updatableadd';\r\n        message.loading({ content: 'Guardando Usuario..', key })\r\n\r\n        createUser({\r\n            variables: data\r\n        }).then(() => {\r\n            message.success({ content: 'Usuario guardado correctamente', key, duration: 2 });\r\n            //  reset();\r\n            history.push('/list')\r\n        }).catch((e: any) => {\r\n            message.error({ content: 'no se puedo guardar el usuario', key, duration: 2 });\r\n            Modal.error({\r\n                title: 'Error',\r\n                icon: <ExclamationCircleOutlined />,\r\n                content: e.message,\r\n                okText: 'ok',\r\n                // cancelText: '取消',\r\n            });\r\n        })\r\n\r\n        console.log(data);\r\n    }\r\n    console.log('render');\r\n\r\n    const errormsg = (error: any, msg = '') => {\r\n\r\n        if (error.message) {\r\n            return error.message\r\n        }\r\n\r\n        if (error.type == \"required\") {\r\n            return 'Este campo es requerido'\r\n        }\r\n\r\n        if (error.type == \"minLength\") {\r\n            return 'min 6 max 12 chars'\r\n        }\r\n\r\n        return msg\r\n\r\n    }\r\n    const password = watch(\"password\", \"\");\r\n\r\n\r\n    return <div className={'login__container'}>\r\n        <a style={{ width: '100%', display: 'block', textAlign: 'center', marginBottom: 40 }} className=\"jsx-457684865 login__container-logo\" href=\"/\">\r\n            <div>\r\n                <img style={{ display: 'block', margin: 'auto' }} alt=\"logo\" src=\"https://stardeos.com/_next/image?url=%2Fassets%2Fimages%2Fstardeos02.png&w=1920&q=100\" decoding=\"async\" data-nimg=\"fill\" sizes=\"100vw\" />\r\n            </div>\r\n        </a>\r\n\r\n        <div className={'login__box'}>\r\n            <div style={{ padding: '45px 50px 30px' }}>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <Col span={24}>\r\n\r\n                        <Row style={{ marginBottom: 20 }}>\r\n                            <Col span={24}>\r\n                                <input type=\"text\" className={'ant-input'} placeholder=\"Nombre Completo\" id=\"title\" {...register(\"title\", {\r\n                                    required: 'es necesario tu nombre completo',\r\n\r\n                                    minLength: {\r\n                                        value: 8,\r\n                                        message: \"Tu nombre completo debe tener al menos 8 characters\"\r\n                                    }, maxLength: {\r\n                                        value: 50,\r\n                                        message: \"Tu nombre completo no debe superar los 50 caracteres\"\r\n                                    }\r\n\r\n                                })} />\r\n                                {errors.title && <Alert message={<>{errormsg(errors.title)}</>} type=\"error\" />}\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row style={{ marginBottom: 20 }}>\r\n                            <Col span={24}>\r\n                                <input type=\"text\" className={'ant-input'} placeholder=\"Usuario\" id=\"username\" {...register(\"username\", {\r\n                                    required: 'es necesario tu username',\r\n\r\n                                    minLength: {\r\n                                        value: 6,\r\n                                        message: \"Tu username debe tener al menos 6 characters\"\r\n                                    }, maxLength: {\r\n                                        value: 30,\r\n                                        message: \"Tu username no debe superar los 30 caracteres\"\r\n                                    }\r\n\r\n\r\n                                })} />\r\n                                {errors.username && <Alert message={<>{errormsg(errors.username)}</>} type=\"error\" />}\r\n                            </Col>\r\n                        </Row>\r\n\r\n\r\n                        <Row style={{ marginBottom: 20 }}>\r\n                            <Col span={24}>\r\n                                <input type={'email'} className={'ant-input'} placeholder=\"email\" id=\"email\" {...register(\"email\", { required: 'tu email es necesario', pattern: /^\\S+@\\S+$/i })} />\r\n                                {errors.email && <Alert message={<>{errormsg(errors.email)}</>} type=\"error\" />}\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        {/* {moment().subtract(18, 'years').format('YYYY MM DD') } */}\r\n                        {/* <Row style={{ marginBottom: 20 }}>\r\n                <Col span={24}>\r\n                    <DatePicker\r\n                        defaultPickerValue={moment().subtract(18, 'years')}\r\n                        disabledDate={(birthday) => {\r\n                            const age = moment().diff(birthday, 'years');\r\n                            const isLegal = (age >= 18);\r\n                            // console.log(isLegal)\r\n                            return !isLegal\r\n                        }}\r\n                    /> \r\n                </Col>\r\n            </Row> */}\r\n\r\n                        <Row style={{ marginBottom: 20 }}>\r\n                            <Col span={24}>\r\n                                <Controller\r\n                                    control={control}\r\n                                    name=\"birthDate\"\r\n                                    rules={{ required: 'Necesitamos tu fecha de nacimiento' }}\r\n                                    render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                        <DatePicker\r\n                                            dateFormat=\"yyyy-MM-dd\"\r\n                                            placeholderText=\"Fecha de nacimiento\"\r\n                                            showMonthDropdown\r\n                                            showYearDropdown\r\n                                            peekNextMonth\r\n                                            dropdownMode=\"select\"\r\n                                            minDate={addDate(new Date(), -80, 'years')}\r\n                                            maxDate={addDate(new Date(), -18, 'years')}\r\n                                            selected={value}\r\n                                            onChange={(x) => { onChange(x) }}\r\n                                            locale={es}\r\n                                            className=\"ant-input\"\r\n                                        />\r\n                                    )}\r\n                                />\r\n                                {errors.birthDate && <Alert message={<>{errormsg(errors.birthDate)}</>} type=\"error\" />}\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row style={{ marginBottom: 20 }}>\r\n                            <Col span={24}>\r\n                                <input className={'ant-input'} placeholder=\"Contraseña\" id=\"title\" {...register(\"password\",\r\n                                    {\r\n                                        required: \"debes especificar un password\",\r\n                                        minLength: {\r\n                                            value: 8,\r\n                                            message: \"Tu password debe tener al menos 8 characters\"\r\n                                        }, maxLength: {\r\n                                            value: 12,\r\n                                            message: \"Tu password no debe superar los 12 caracteres\"\r\n                                        }\r\n                                    })} />\r\n                                {errors.password && <Alert message={<>{errormsg(errors.password)}</>} type=\"error\" />}\r\n                            </Col>\r\n\r\n                        </Row>\r\n\r\n                        <Row style={{ marginBottom: 20 }}>\r\n                            <Col span={24}>\r\n                                <input className={'ant-input'} placeholder=\"Confirma Contraseña\" id=\"title2\"\r\n\r\n                                    {...register(\"password2\", {\r\n                                        required: \"debes confirmar tu password\",\r\n                                        validate: value =>\r\n                                            value === password || \"Los passwords no son iguales\"\r\n                                    })}\r\n                                />\r\n                                {errors.password2 && <Alert message={<>{errormsg(errors.password2)}</>} type=\"error\" />}\r\n\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row style={{ marginBottom: 20 }}>\r\n                            <Col span={24}>\r\n                                <Button className={'button primary'} htmlType={'submit'} type=\"primary\">Regístrate</Button>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Col>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div >\r\n}\r\n\r\nexport default withRouter(UserForm)","import React, { Component } from 'react'\r\nimport { Table, Tag, Space } from 'antd';\r\nimport moment from 'moment';\r\n\r\nconst columns = [{\r\n    title: 'ID',\r\n    dataIndex: '_id',\r\n    key: '_id',\r\n    //   render: text => <a>{text}</a>,\r\n},\r\n{\r\n    title: 'Nombres',\r\n    dataIndex: 'title',\r\n    key: 'title',\r\n    //   render: text => <a>{text}</a>,\r\n},\r\n{\r\n    title: 'Usuario',\r\n    dataIndex: 'username',\r\n    key: 'username',\r\n}, {\r\n    title: 'birthDate',\r\n    dataIndex: 'birthDate',\r\n    key: 'birthDate',\r\n    // render: text => <>{moment(text).format('YYYY-MM-DD')}</>,\r\n}, {\r\n    title: 'createdAt',\r\n    dataIndex: 'createdAt',\r\n    key: 'createdAt',\r\n}, {\r\n    title: 'updatedAt',\r\n    dataIndex: 'updatedAt',\r\n    key: 'updatedAt',\r\n}\r\n]\r\n\r\nexport const UsersTable = ({ data }: { data: Array<{ _id: string, title: string, usernaame: string, birthDate: Date, createdAt: Date, updatedAt: Date, }> }) => {\r\n\r\n    if (!data || !(data.length > 0)) {\r\n        return <h2 >Sin datos</h2>\r\n    }\r\n\r\n    return <Table className={'users_table'} rowKey=\"_id\" columns={columns} dataSource={data} />\r\n}\r\n\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport { Row, Col } from 'antd';\r\n//import { DatePicker, Space } from 'antd';\r\nimport es from 'date-fns/locale/es';\r\nimport { Form, Input, Button, Checkbox, Layout, Menu, Breadcrumb, Alert, message, Modal } from 'antd';\r\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useMutation, gql, useQuery } from '@apollo/client';\r\nimport { Table, Tag, Space } from 'antd';\r\nimport { Link } from \"react-router-dom\"\r\nimport { ExclamationCircleOutlined, SearchOutlined, VerticalAlignTopOutlined, VerticalAlignBottomOutlined, DeleteOutlined, CloudUploadOutlined, InboxOutlined, EditOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { UsersTable } from './components/usersTable'\r\nconst { Content } = Layout;\r\n\r\n\r\n\r\nexport default () => {\r\n\r\n    const getUsersQuery = gql`query getUsers{getUsers{ _id, title, username, birthDate, createdAt, updatedAt }}`;\r\n    const { loading, error, data, refetch } = useQuery(getUsersQuery);\r\n\r\n\r\n    if (loading) return <>'Loading...'</>;\r\n    if (error) return <>`Error! ${error.message}`</>;\r\n\r\n    const { getUsers } = data;\r\n\r\n\r\n    return <div className={'login__container'} style={{ maxWidth: 'min-content' }}>\r\n        <div className={'login__box'}>\r\n            <div style={{ padding: '45px 50px 30px' }}>\r\n                <h1 style={{ display: 'inline-block' }}>Usuarios Registrados</h1>\r\n\r\n                <Link to=\"/\" style={{ float: 'right' }}>\r\n                    <Button type=\"primary\" icon={<PlusOutlined />}></Button>\r\n                </Link>\r\n                <UsersTable data={getUsers} />\r\n            </div>\r\n        </div>\r\n    </div >\r\n\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport 'antd/dist/antd.css'\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Form, Input, Button, Checkbox, Layout, Menu, Breadcrumb } from 'antd';\n\nimport LoginForm from './Users/form'\nimport Lista from './Users/list'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nconst { SubMenu } = Menu;\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nfunction App() {\n  return (\n    <Router>\n      <Layout>\n        <Content className=\"login-page\">\n\n          <Switch>\n            <Route path=\"/list\">              \n                <Lista />           \n            </Route>\n\n            <Route path=\"/\">\n              <LoginForm />\n            </Route>\n          </Switch>\n        </Content>\n\n      </Layout>\n\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  useQuery,\n  gql\n} from \"@apollo/client\";\n\nconst client = new ApolloClient({\n  uri: 'http://137.184.154.105:4000/graphql',\n  cache: new InMemoryCache({ resultCaching: false })\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}